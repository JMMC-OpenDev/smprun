/*******************************************************************************
 *          AppLauncher project ( http://www.jmmc.fr/applauncher )
 *******************************************************************************
 * Copyright (c) 2014, CNRS. All rights reserved.
 *
 * This file is part of AppLauncher.
 *
 * AppLauncher is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, version 3.
 *
 * AppLauncher is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * AppLauncher. If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/

/*
 * MonitorWindow.java
 *
 * Created on Aug 16, 2011, 2:35:42 PM
 */
package fr.jmmc.smprun.stub;

import javax.swing.JButton;

/**
 * Display progress of stub internal state.
 * 
 * @author Sylvain LAFRASSE, Laurent BOURGES
 */
public class MonitorWindow extends javax.swing.JFrame {

    /** default serial UID for Serializable interface */
    private static final long serialVersionUID = 1;

    /** Creates new form MonitorWindow */
    public MonitorWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jProgressBar = new javax.swing.JProgressBar();
        jLabelMessage = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(350, 100));
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 20, 16, 18);
        getContentPane().add(jProgressBar, gridBagConstraints);

        jLabelMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMessage.setText("TEXT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        getContentPane().add(jLabelMessage, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.setToolTipText("Interrupt the application launching (if possible)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        getContentPane().add(jButtonCancel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JProgressBar jProgressBar;
    // End of variables declaration//GEN-END:variables

    /**
     * Return the Progress bar object
     * @return Progress bar object
     */
    javax.swing.JProgressBar getProgressBar() {
        return jProgressBar;
    }

    /**
     * Return the label object
     * @return label object
     */
    javax.swing.JLabel getLabelMessage() {
        return jLabelMessage;
    }

    /**
     * Return the cancel button object
     * @return cancel button object
     */
    public JButton getButtonCancel() {
        return jButtonCancel;
    }
}
